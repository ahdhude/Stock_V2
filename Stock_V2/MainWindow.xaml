<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Stock_V2"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" x:Class="MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="726.677" Width="849.39"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="MaterialDesignFlatButtonRipple" Color="#FFB6B6B6" Options:Freeze="True" />

            <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#FFDeDeDe" Options:Freeze="True" />

            <Style x:Key="MaterialDesignFlatButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                <Setter Property="TextBlock.FontWeight" Value="Medium"/>
                <Setter Property="TextBlock.FontSize" Value="14"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="16 4 16 4"/>
                <Setter Property="Height" Value="32" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" x:Name="border" CornerRadius="2">
                                    <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"    
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <!--Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/-->
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialDesignToolButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Foreground" Value="#616161" />
                <Setter Property="Padding" Value="4"/>
                <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"    
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding MessageQueue, ElementName=MainSnackbar}">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="212">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}" />
                    <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0" HorizontalContentAlignment="Stretch"
                            >

                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Binoculars" />
                            <TextBlock Margin="8,0,0,0" FontSize="16"><Run Text="PO"/></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Binoculars" />
                            <TextBlock Margin="8 0 0 0" FontSize="16"><Run Text="GRF"/></TextBlock>
                        </StackPanel>

                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <Button Content="Hello World"/>
                                <Button Content="Nice Popup"/>
                                <Button Content="Can't Touch This" IsEnabled="False" />
                                <Separator/>
                                <Button Content="Goodbye" />
                            </StackPanel>
                        </materialDesign:PopupBox>
                        
                        <materialDesign:ColorZone Mode="Standard" Padding="8 4 8 4" CornerRadius="2" Panel.ZIndex="1"
                            Margin="16 0 0 0"
                            materialDesign:ShadowAssist.ShadowDepth="Depth1" Width="265" HorizontalAlignment="Right">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Style="{DynamicResource MaterialDesignToolButton}">
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                </Button>
                                <TextBox Grid.Column="1" Margin="8 0 0 0" materialDesign:HintAssist.Hint="Search" 
                                    materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0"
                                    MinWidth="200" VerticalAlignment="Center" />
                                <Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2">
                                    <materialDesign:PackIcon Kind="Send" Opacity=".56" Margin="8 0 0 0" />
                                </Button>
                            </Grid>
                        </materialDesign:ColorZone>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ScrollViewer Grid.Row="1" 
                                  HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, ElementName=DemoItemsListBox}"
                                  VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, ElementName=DemoItemsListBox}" 
                                  Padding="{Binding SelectedItem.MarginRequirement, ElementName=DemoItemsListBox}">
                        <ContentControl />
                    </ScrollViewer>
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
